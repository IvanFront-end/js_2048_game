{"version":3,"sources":["scripts/main.js"],"names":["scoreEl","document","querySelector","board","score","startGame","innerText","addNewTile","updateBoard","emptyTiles","row","col","push","length","randomIndex","Math","floor","random","newValue","gameBoard","getElementById","innerHTML","tileValue","tile","createElement","className","textContent","style","backgroundColor","getTileColor","color","includes","appendChild","isGameOver","startButton","messageLose","hidden","messageWin","value","colorMap","Map","has","get","moveTiles","direction","rowIndices","tileMoved","colIndices","currentValue","newRow","newCol","currentRow","currentCol","addEventListener","e","key","startMessage"],"mappings":"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","file":"main.3c6b5723.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst scoreEl = document.querySelector('.game-score');\n\nlet board = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nlet score = 0;\n\nscoreEl.innerText = score;\n\nfunction startGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n  score = 0;\n  scoreEl.innerText = score;\n\n  addNewTile();\n  addNewTile();\n  updateBoard();\n}\n\nfunction addNewTile() {\n  const emptyTiles = [];\n\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      if (board[row][col] === 0) {\n        emptyTiles.push({\n          row, col,\n        });\n      }\n    }\n  }\n\n  if (emptyTiles.length > 0) {\n    const randomIndex = Math.floor(Math.random() * emptyTiles.length);\n    const { row, col } = emptyTiles[randomIndex];\n\n    const newValue = Math.random < 0.9 ? 4 : 2;\n\n    board[row][col] = newValue;\n  }\n}\n\nfunction updateBoard() {\n  const gameBoard = document.getElementById('game-board');\n\n  gameBoard.innerHTML = '';\n\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      const tileValue = board[row][col];\n      const tile = document.createElement('div');\n\n      tile.className = 'field-cell';\n      tile.textContent = tileValue !== 0 ? tileValue : '';\n\n      tile.style.backgroundColor = getTileColor(tileValue);\n      tile.style.color = [2, 4, 8].includes(tileValue) ? '#6b6359' : '#f9f6f2';\n\n      gameBoard.appendChild(tile);\n    }\n  }\n\n  if (isGameOver()) {\n    startButton.style.backgroundColor = '#f87474';\n    messageLose.hidden = false;\n  }\n\n  if (score === 2048) {\n    messageWin.hidden = false;\n  }\n}\n\nfunction getTileColor(value) {\n  if (value === 0) {\n    return '#d6cdc4';\n  }\n\n  const colorMap = new Map([\n    [2, '#eee4da'],\n    [4, '#ede0c8'],\n    [8, '#f2b179'],\n    [16, '#f59563'],\n    [32, '#f67c5f'],\n    [64, '#f65e3b'],\n    [128, '#edcf72'],\n    [256, '#edcc61'],\n    [512, '#edc850'],\n    [1024, '#edc53f'],\n    [2048, '#edc22e'],\n  ]);\n\n  if (colorMap.has(value)) {\n    return colorMap.get(value);\n  }\n\n  return '#ecc95c';\n}\n\nfunction moveTiles(direction) {\n  let tileMoved = false;\n\n  const rowIndices = direction === 'up' ? [0, 1, 2, 3] : [3, 2, 1, 0];\n  const colIndices = direction === 'left' ? [0, 1, 2, 3] : [3, 2, 1, 0];\n\n  for (const row of rowIndices) {\n    for (const col of colIndices) {\n      const currentValue = board[row][col];\n\n      if (currentValue === 0) {\n        continue;\n      }\n\n      let newRow = row;\n      let newCol = col;\n      let currentRow = row;\n      let currentCol = col;\n\n      while (true) {\n        if (direction === 'up') {\n          newRow--;\n          currentRow = newRow + 1;\n        } else if (direction === 'down') {\n          newRow++;\n          currentRow = newRow - 1;\n        } else if (direction === 'left') {\n          newCol--;\n          currentCol = newCol + 1;\n        } else if (direction === 'right') {\n          newCol++;\n          currentCol = newCol - 1;\n        }\n\n        if (newRow < 0 || newRow >= 4 || newCol < 0 || newCol >= 4) {\n          newRow -= direction === 'up' ? -1 : 1;\n          newCol -= direction === 'left' ? -1 : 1;\n          break;\n        }\n\n        const newValue = board[newRow][newCol];\n\n        if (newValue === 0) {\n          board[newRow][newCol] = currentValue;\n          board[currentRow][currentCol] = 0;\n          tileMoved = true;\n        } else if (newValue === currentValue) {\n          board[newRow][newCol] += currentValue;\n          board[currentRow][currentCol] = 0;\n          tileMoved = true;\n          score += board[newRow][newCol];\n          scoreEl.innerText = score;\n          break;\n        } else {\n          newRow -= direction === 'up' ? -1 : 1;\n          newCol -= direction === 'left' ? -1 : 1;\n          break;\n        }\n      }\n    }\n  }\n\n  if (tileMoved) {\n    addNewTile();\n    updateBoard();\n  }\n}\n\nfunction isGameOver() {\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      const currentValue = board[row][col];\n\n      if (currentValue === 0) {\n        return false;\n      }\n\n      if (\n        (row < 3 && board[row + 1][col] === currentValue)\n        || (col < 3 && board[row][col + 1] === currentValue)\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nconst startButton = document.querySelector('.start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\nmessageWin.hidden = true;\nmessageLose.hidden = true;\n\nstartButton.addEventListener('click', () => {\n  document.addEventListener('keydown', (e) => {\n    if (e.key === 'ArrowUp') {\n      moveTiles('up');\n    } else if (e.key === 'ArrowDown') {\n      moveTiles('down');\n    } else if (e.key === 'ArrowLeft') {\n      moveTiles('left');\n    } else if (e.key === 'ArrowRight') {\n      moveTiles('right');\n    }\n  });\n\n  const startMessage = document.querySelector('.message-start');\n\n  score = 0;\n  messageWin.hidden = true;\n  messageLose.hidden = true;\n  startMessage.hidden = true;\n\n  startGame();\n  startButton.className = 'button restart';\n  startButton.textContent = 'Restart';\n  startButton.style.backgroundColor = '';\n});\n\nstartGame();\n"]}